#include <iostream>
#include <ctime>
using namespace std;

void main()
{
    setlocale(LC_ALL, "Rus");
    srand(time(NULL));

    // Урок #31. Двумерный массив. Инициализация. Индексы. Синтаксис. ------------------------------------------------------------------------------------------------------------------
    // Урок #30. Двумерный массив. Многомерные массивы. Теория. ------------------------------------------------------------------------------------------------------------------------

    const int ROW = 3;
    const int COL = 4;

    int arr[ROW][COL];
    int arr1[ROW][COL]{};
    int arr2[ROW][COL] = {};
    int arr3[ROW][COL]
    {
        { 2, 4, 66, 1 },
        { 4344, 3, 6, 1 },
        { 222, 232, 1, 11 }
    };

    int arr4[][COL] =
    {
        { 2, 4, 66, 1 },
        { 4344, 3, 6, 1 },
        { 222, 232, 1, 11 },
        { 222, 232, 1, 11 },
        { 222, 232, 1, 11 },
        { 222, 232, 1, 11 },
        { 222, 232, 1, 11 },
    };

    cout << arr[1][1] << endl;
    cout << arr1[1][1] << endl;

    arr[2][0] = 111111;

    arr[1][1] = 55;

    cout << arr[1][1] << endl;

    // Homework #08. Написать программу поиска минимального элемента в массиве. --------------------------------------------------------------------------------------------------------
    // Homework #07. Написать программу, которая генерирует случайные числа и заполняет ими массив на 10 элементов, диапазон значений чисел от 0 до 20, числа не должны повторяться. ---

    /*
    
    int const SIZE = 10;

    int arr[SIZE];

    bool isExist;

    for (int i = 0; i < SIZE; )
    {
        isExist = false;

        int num = rand() % 20;

        for (int j = 0; j < i; j++)
        {
            if (arr[j] == num)
            {
                isExist = true;
                break;
            }
        }

        if (!isExist)
        {
            arr[i] = num;
            i++;
        }
    }
    
    cout << endl;

    for (int i = 0; i < SIZE; i++)
    {
        cout << arr[i] << endl;
    }

    cout << endl;

    // поиск минимального элемента

    int min = arr[0];

    for (int i = 1; i < SIZE; i++)
    {
        if (arr[i] < min)
        {
            min = arr[i];
        }
    }

    cout << "min - " << min << endl;
    
    */


    // Урок #29. rand. srand. rand задать диапазон. srand time null. Генератор случайных чисел. randomize. -----------------------------------------------------------------------------

    /*
    
    int a = rand() % 10 + 5;

    cout << a << endl;

    a = rand() % 10;

    cout << a << endl;

    cout << endl;

    int const SIZE = 10;

    int arr[SIZE];

    for (int i = 0; i < SIZE; i++)
    {
        arr[i] = rand() % 100;
    }

    for (int i = 0; i < SIZE; i++)
    {
        cout << arr[i] << endl;
    }
    
    */


    // Урок #28. sizeof что это. sizeof массив. Узнать количество элементов массива. ---------------------------------------------------------------------------------------------------

    // sizeof - возвращает длину в байтах переменной или типа данных.

    /*
    
    int a;

    cout << sizeof(int) << endl;
    cout << sizeof(double) << endl;
    cout << sizeof(a) << endl;

    int arr[]{ 5, 33, 545, 111, 326 };
    double arr1[]{ 5, 33, 545, 111, 326 };

    cout << sizeof(arr) / sizeof(int) << endl;

    int b = sizeof(arr);
    int c = sizeof(int);

    for (int i = 0; i < sizeof(arr) / sizeof(arr[0]); i++)
    {
        cout << arr[i] << endl;
    }

    cout << endl;

    for (int i = 0; i < sizeof(arr1) / sizeof(arr1[0]); i++)
    {
        cout << arr1[i] << endl;
    }
    
    */


    // Урок #27. Вывод массива. Массивы и циклы. Цикл с массивом. ----------------------------------------------------------------------------------------------------------------------

    /*
    
    const int SIZE = 5;
    
    int arr[SIZE];

    for (int i = 0; i < SIZE; i++)
    {
        arr[i] = i + 1;
    }

    for (int i = 0; i < SIZE; i++)
    {
        cout << arr[i] << endl;
    }
    
    */


    // Урок #26. Инициализация массива. Способы. Инициализация массива нулями. ---------------------------------------------------------------------------------------------------------

    /*
    
    int arr[] = { 1, 66, 12, 2 };
    int arr1[]{ 2, 17, 99, 3 };
    int arr2[4]{ 2, 17, 99, 3 };
    int arr3[10]{ 2, 17, 99, 3 };
    int arr4[10]{};

    cout << arr[3] << endl;
    cout << arr1[2] << endl;
    cout << arr2[3] << endl;
    cout << arr3[9] << endl;
    cout << arr4[1] << endl;
    cout << arr4[4] << endl;
    cout << arr4[7] << endl;
    
    */


    // Урок #25. Что такое массив. Примеры. Теория. Array. Одномерный массив. Синтаксис. -----------------------------------------------------------------------------------------------

    // Массив - это совокупность переменных, которые позволяют хранить несколько однотипных значений. Каждая переменная в массиве является самостоятельной единицей и называется
    // элементом и каждый такой элемент имеет собственный порядковый номер (индекс).

    /*
    
    int arr[4];

    arr[0] = 5;
    arr[1] = 7;
    arr[3] = 3333;
    arr[2] = 10;

    // arr[55] = 1;                                                                                                                                                         // -> error!

    cout << arr[0] << endl;
    
    */


    // Homework #06. Написать программу, которая выводит на экран прямоугольник символом *. Высота и ширина задается пользователем. ----------------------------------------------------

    /*
    
    int width, height;

    cout << "Введите ширину прямоугольника: ";
    cin >> width;

    cout << "Введите высоту прямоугольника: ";
    cin >> height;

    cout << endl;

    // Сплошной прямоугольник

    for (int i = 0; i < height; i++)
    {
        for (int j = 0; j < width; j++)
        {
            cout << "*";
        }

        cout << endl;
    }

    cout << endl;

    // Контурный прямоугольник

    for (int i = 0; i < height; i++)
    {
        for (int j = 0; j < width; j++)
        {
            if (i == 0 || i == height - 1)
            {
                cout << "*";
            }
            else if (j == 0 || j == width - 1)
            {
                cout << "*";
            }
            else
            {
                cout << " ";
            }
        }

        cout << endl;
    }
    
    */


    // Урок #24. Что такое вложенный цикл. Вложенная конструкция. ----------------------------------------------------------------------------------------------------------------------

    /*
    
    for (int i = 1; i < 5; i++)
    {
        cout << "сработал 1-й цикл for итерация № " << i << endl;

        for (int j = 1; j < 5; j++)
        {
            cout << "\tсработал 2-й цикл for итерация № " << j << endl;
        }
    }
    
    */


    // Урок #23. Найти ошибку в коде. Отладка. Как пользоваться отладчиком. ------------------------------------------------------------------------------------------------------------

    /*
    
    int a = 5;
    int b = 6;
    int c;

    c = a + b;

    cout << c << endl;
    
    */


    // Урок #22. Оператор перехода goto. Когда код становится непонятен даже создателю. ------------------------------------------------------------------------------------------------

    /*
    
    cout << "Один" << endl;

    goto link;

    cout << "Два" << endl;

    cout << "Три" << endl;

    link:

    cout << "Четыре" << endl;

    cout << "Пять" << endl;
    
    */


    // Урок #21. Закрывается консоль. Что делать? Задержка экрана консоли. -------------------------------------------------------------------------------------------------------------
    // Урок #20. Как сделать exe файл в Visual studio. Как скомпилировать cpp в exe. ---------------------------------------------------------------------------------------------------

    /*
    
    cout << "Один" << endl;
    cout << "Два" << endl;
    cout << "Три" << endl;
    cout << "Четыре" << endl;
    cout << "Пять" << endl;

    int a;
    cin >> a;

    system("pause");
    
    */


    // Урок #19. Ключевое слово continue. Что это. Оператор continue. Пример. Синтаксис. -----------------------------------------------------------------------------------------------

    /*
    
    for (int i = 0; i < 5; i++)
    {
        if (i == 2)
        {
            continue;
        }

        cout << "переменная i = " << i << endl;
    }
    
    */


    // Урок #18. Ключевое слово break. Оператор break. Описание. Пример. Синтаксис. ----------------------------------------------------------------------------------------------------

    /*
    
    cout << "начало цикла" << endl;

    for (int i = 0; i < 10; i++)
    {
        cout << "переменная i = " << i << endl;

        if (i == 5)
        {
            break;
        }
    }

    cout << "конец цикла" << endl;

    int i = 0;

    while (true)
    {
        cout << "переменная i = " << i << endl;
        i++;

        if (i == 6)
        {
            break;
        }
    }
    
    */


    // Урок #17. Цикл for. Фишки. Фичи. Особенности. Несколько переменных. -------------------------------------------------------------------------------------------------------------

    /*
    
    int i = 0;

    cout << "1-й цикл" << endl;

    for (; i < 10; i++)
    {
        cout << "переменная i = " << i << endl;
    }

    cout << "2-й цикл" << endl;

    for (; i < 20; i++)
    {
        cout << "переменная i = " << i << endl;
    }

    for (int j = 0; j < 10; )
    {
        cout << "переменная j = " << j << endl;

        if (true)
        {
            j++;
        }

        cout << "переменная j = " << j << endl;
    }

    for (int i = 0, j = 10; i < 10 && j != 5; i++, j--)
    {
        cout << "переменная i = " << i << endl;
        cout << "переменная j = " << j << endl;
    }

    for (int k = 0; ; k++)
    {
        cout << "переменная k = " << k << endl;
    }

    for ( ; ; )
    {
        cout << "бесконечный цикл" << endl;
    }
    
    */


    // Урок #16. Цикл for. Что это. Что делает. Пример. Синтаксис. ---------------------------------------------------------------------------------------------------------------------

    /*
    
    for (int i = 0; i < 10; i++)
    {
        cout << "переменная i = " << i << endl;
    }
    
    */


    // Homework #05. Написать программу, которая находит сумму всех целых нечетных чисел в диапазоне, указанном пользователем. ---------------------------------------------------------

    /*
    
    int from, to, sum = 0;

    cout << "Введите начало диапазона" << endl;
    cin >> from;

    cout << "Введите конец диапазона" << endl;
    cin >> to;

    while (from <= to)
    {
        if (from % 2 != 0)
        {
            sum += from;
        }
        from++;
    }

    cout << sum << endl;
    
    */


    // Homework #04. Разработать программу, которая выводит на экран линию из символов. Число символов, какой символ использовать, и какая будет линия - вертикальная или
    // горизонтальная - указывает пользователь. ----------------------------------------------------------------------------------------------------------------------------------------

    /*
    
    char symbl;
    int num, type;

    cout << "Введите символ: ";
    cin >> symbl;
    
    cout << "Укажите количество символов в строке: ";
    cin >> num;

    cout << "Какая будет строка?" << endl << "1 - вертикальная" << endl << "2 - горизонтальная" << endl;
    cin >> type;

    switch (type)
    {
        case 1:
            while (num > 0)
            {
                cout << symbl << endl;
                num--;
            }
            break;
        case 2:
            while (num > 0)
            {
                cout << symbl;
                num--;
            }
            break;
        default:
            cout << "Выберите 1 или 2!";
            break;
    }
    
    */

    
    // Урок #15. Циклы. Цикл do while. Что это. Что делает. Пример. --------------------------------------------------------------------------------------------------------------------

    /*
    
    int a = 18;

    do
    {
        cout << "Переменная a = " << a << endl;
        a++;
    } while (a < 20);
    
    */


    // Урок #14. Циклы. Цикл while. Что это. Что делает. Пример. -----------------------------------------------------------------------------------------------------------------------

    /*
    
    int a = 0;

    while (a < 10)
    {
        cout << "Переменная a = " << a << endl;
        a++;
    
    
    */


    // Homework #03. Написать простой калькулятор. Пользователь вводит два числа. Описать меню в консоли для математических операций сложения, вычитания, умножения, деления. Через
    // оператор switch реализовать математическую операцию, соответствующую пункту меню. -----------------------------------------------------------------------------------------------

    /*
    
    int num1, num2, operation;

    cout << "Введите первое число: ";
    cin >> num1;

    cout << "Введите второе число: ";
    cin >> num2;

    cout << "Выберите операцию" << endl;
    cout << "1 - сложить" << endl << "2 - вычесть" << endl << "3 - умножить" << endl << "4 - разделить" << endl;

    cin >> operation;

    switch (operation)
    {
        case 1:
            cout << num1 + num2 << endl;
            break;
        case 2:
            cout << num1 - num2 << endl;
            break;
        case 3:
            cout << num1 * num2 << endl;
            break;
        case 4:
            cout << (float)num1 / num2 << endl;
            break;
        default:
            cout << "Ошибка! Такой пункт отсутствует!" << endl;
            break;
    }
    
    */


    // Урок #13. Switch. Что это. Пример. Синтаксис. -----------------------------------------------------------------------------------------------------------------------------------

    /*
    
    int a;
    cin >> a;

    switch (a)
    {
        case 1:
            cout << "Вы ввели 1" << endl;
            break;
        case 2:
            cout << "Вы ввели 2" << endl;
            break;
        default:
            cout << "Я не знаю этого числа!" << endl;
            break;
    }

    int b;
    cin >> b;

    switch (b)
    {
    case 1:
    {
        cout << "Вы ввели 1" << endl;
    }
    case 2:
    {
        cout << "Вы ввели 2" << endl;
    }
        break;
    default:
    {
        cout << "Я не знаю этого числа!" << endl;
    }
        break;
    }
    
    */


    // Homework #02. Написать программу, проверяющую число, введенное с клавиатуры, на четность. ---------------------------------------------------------------------------------------

    /*
    
    int num;

    cout << "Введите число" << endl;
    cin >> num;

    if (num % 2 == 0)
    {
        cout << "Введенное число чётное" << endl;
    }
    else
    {
        cout << "Введенное число нечётное" << endl;
    }
    
    */


    // Урок #12. If else. Конструкция логического выбора if. Лесенка if - else if. Примеры использования. ------------------------------------------------------------------------------

    /*
    
    bool isRain = false;

    if (isRain)
    {
        cout << "Идёт дождь, нам нужен зонт!" << endl;
    }
    else
    {
        cout << "Дождя нет, зонт не нужен!" << endl;
    }

    int a;

    cout << "Введите число" << endl;
    cin >> a;

    if (a > 5)
    {
        cout << "Ваше число больше 5-ти" << endl;
    }
    else if (a == 5)
    {
        cout << "Ваше число равно 5-ти" << endl;
    }
    else
    {
        cout << "Ваше число меньше 5-ти" << endl;
    }
    
    */


    // Урок #11. Логические операции. Операторы сравнения, равенства, объединения, инверсия. -------------------------------------------------------------------------------------------

    /*
    
    1. Операторы сравнения:

    < - меньше
    > - больше
    <= - меньше / равно
    >= - больше / равно

    2. Операторы равенства:

    == - равно
    != - не равно

    3. Логические операторы объединения и отрицательная инверсия:

    && - и
    || - или
    ! - не
    
    */
    
    /*
    
    int a = 2;
    int b = 3;

    cout << (4 > 5) << endl;
    cout << (4 < 11) << endl;
    cout << (a < b) << endl;
    cout << (4 <= 4) << endl;
    cout << (4 >= 2) << endl;

    cout << (5 == 5) << endl;
    cout << (a == b) << endl;
    cout << (5 != 7) << endl;

    cout << !(a == b) << endl;
    cout << !(a != b) << endl;

    cout << ((a == b) && (5 > 4)) << endl;
    cout << ((a != b) || (5 > 4)) << endl;
    
    */


    // Урок #10. Сокращенные арифметические формы +=, -= и т.д. ------------------------------------------------------------------------------------------------------------------------

    /*
    
    int a = 0;

    cout << a << endl;

    a = a + 20;
    cout << a << endl;

    a += 20;
    cout << a << endl;

    a -= 10;
    cout << a << endl;

    a *= 2;
    cout << a << endl;

    a /= 5;
    cout << a << endl;
    
    */


    // Урок #9. Инкремент и декремент. Постфиксный и префиксный. -----------------------------------------------------------------------------------------------------------------------

    /*
    
    int a = 1, b = 1, c = 1, d, e = 1, f;

    cout << a << endl;

    a = a + 1;
    cout << a << endl;

    a++;
    cout << a << endl;

    a--;
    cout << a << endl;

    cout << b++ << endl;
    cout << ++b << endl;

    d = ++c * c;
    cout << "d = " << d << endl;
    cout << "c = " << c << endl;

    f = ++e * e++;
    cout << "f = " << f << endl;
    cout << "e = " << e << endl;

    */


    // Homework #01. Ввести три числа и вывести значение их суммы, произведения и среднего арифметического. ----------------------------------------------------------------------------

    /*
    
    int a, b, c;

    cout << "Введите первое число: ";
    cin >> a;

    cout << "Введите второе число: ";
    cin >> b;

    cout << "Введите тертье число: ";
    cin >> c;

    cout << "Сумма: " << a + b + c << endl;
    cout << "Произведение: " << a * b * c << endl;
    cout << "Среднее арифметическое: " << (double)(a + b + c) / 3 << endl;

    */

 
    // Урок #8. Операторы. Арифметические операции с числами. --------------------------------------------------------------------------------------------------------------------------

    /*
    
    int a = 5;

    cout << a << endl;

    a = -a;

    cout << a << endl;

    int b = 5, c = 2, d, e, f;

    d = b + c;
    e = 2 + 2 * 2;
    f = (2 + 2) * 2;

    cout << d << endl;
    cout << a * b << endl;
    cout << e << endl;
    cout << f << endl;
    
    */


    // Урок #7. Ввод данных. Cin. Пример. Синтаксис. -----------------------------------------------------------------------------------------------------------------------------------

    /*
    
    int Var, Var2, Var3, Var4;

    cout << "Введите первое число: ";
    cin >> Var;

    cout << "Введите второе число: ";
    cin >> Var2;

    cout << "Число 1 = " << Var << endl << "Число 2 = " << Var2 << endl;

    cout << "Введите два числа: ";
    cin >> Var3 >> Var4;

    cout << "Число 3 = " << Var3 << endl << "Число 4 = " << Var4 << endl;
    
    */


    // Урок #6. Константы. Ключевое слово const. ---------------------------------------------------------------------------------------------------------------------------------------
    
    /*
    
    const int COUNT_DAYS_IN_WEEK = 7;

    const char NEW_LINE = '\n';
    const char TAB = '\t';

    cout << TAB << TAB << COUNT_DAYS_IN_WEEK << NEW_LINE;

    */


    // Урок #5. Переменные. Способы объявления. Правила наименования. ------------------------------------------------------------------------------------------------------------------

    /*
    
    Переменная - это область оперативной памяти, обладающая собственным именем и предназначенная для хранения данных разных типов, которые могут быть изменены.

    int a;
	a = 5;

	int b = 7;

	cout << a << endl;
	cout << b << endl;

	a = 10;

	cout << a << endl;

	int Age, c, d, e = 6565;

	Age = 10;
	c = 1;
	d = 2;

	cout << Age << " " << c << " " << d << " " << e << endl;

	double f = 1.1551;
	char g = 'g';

	cout << f << " " << g << endl;

	bool h = true;
	bool i = false;

	cout << h << " " << i << endl;

    */


    // Урок #4. Типы данных. -----------------------------------------------------------------------------------------------------------------------------------------------------------

    /*
    
    Тип		Размер в байтах		Пояснение											Диапазон значений
	float	4					описывает вещественные числа одинарной точности
	double	8					описывает вещественные числа двойной точности
	int		4					описывает целые числа								от -2147483648 до 2147483647
	short	2					описывает короткие целые числа						от -32768 до 32767
	long	4					описывает длинные целые числа						от -2147483648 до 2147483647
	char	1					описывает символы
	bool	1					описывает логические значения

    */


    // Homework #00. Вывести отформатированные строки песни или стихотворения (с переносом на новую строку, с пустой строкой между четверостишиями и т.д.). ----------------------------

    /*
    
    cout << "I gotta flag and a picture of Robert E. Lee\nHangin' in the den for everyone to see\nI got a 68 long bed \"GMC\"\nSittin' out back underneath a tree\n";
	cout << "Every-day I'm tired cause I work really hard\nAt 5 o'clock I punch my time card\nSo when I get home I don't pay no re-gard\nTo the junk that's pilin' up in my back-yard\n\n";
	cout << "\tWell you can wash The \"Dukes of Hazzard\" sheets on my bed\n\tYou can wash the dust off of my stuffed deer head\n\tYou can wash my mud tires 'til there's no tread\n\tBut you can't wash the red outta my redneck\n";
    
    */


    // Урок #3. Escape-последовательности. Как использовать. ---------------------------------------------------------------------------------------------------------------------------

    /*
    
    \n - перейти на начало новой строки
	\t - перейти к следующей позиции табуляции
	\b - удаление последнего выведенного символа
	\\ - вывести обратную косую черту
	\" - вывести двойную кавычку
	\' - вывести одинарную кавычку

    cout << "Ленин\n";
    cout << "\t\tЛенин\n\n\t\n";
    cout << "\"Ленин\"\\\n";
    
    */

    // Урок #2. Структура и порядок выполнения программы. #include. using namespace. ---------------------------------------------------------------------------------------------------

    /*

    #include <iostream>
    #include <math.h>

    /* Данная строчка подключает в программу библиотеку под названием iostream. Библиотека - это файл, в котором содержатся описания различных функций, реализованных другими
    программистами. Данная программа получила возможность использовать функции, находящиеся в библиотеке iostream. */

    /* В языке C++ существует понятие пространства имен. Это пространство определяет некую область, на которую приходятся действия оператора или функции. Для того, чтобы
    использовать оператор, находящийся в определенном пространстве, необходимо подключить это пространство в свою программу. Ниже подключается пространство под названием std */

    // using namespace std;

    // Однострочный комментарий

    /*
        Многострочный
        комментарий
    */

    /*
    
        int main()
    {
        std::cout << "Ленин" << std::endl;

        setlocale(LC_ALL, "Rus");

        std::cout << "Ленин" << std::endl;
    }
    
    */

    // Урок #1. Visual Studio. Как создать проект. Первая программа. -------------------------------------------------------------------------------------------------------------------

    /*
    
    #include <iostream>
    using namespace std;

    int main()
    {
	    cout << "Goodbye World..." << endl;
    }

    */
}
